{
  "hash": "ed7478b9c0f30cfa01d9e121075dd25c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Uredni Podaci u Biomedicinskim Naukama\"\ndescription: \"Neke baze mogu biti toliko neuredne da su praktično neupotrebljive. Ovde ćete naći kratak pregled strategija za pravljenje urednih baza. Više vremena provedeno razmišljajući o analizi, a manje o sređivanju podataka je bolje za nauku.\"\ndate: 2023-11-05\ndate-format: D/MM/YYYY\nlang: hr\nlanguage: language-sr-Latn.yml\nnumber-sections: true\ncitation:\n  language: sr-Latn\nauthor:\n  - name: Nikola N. Grubor\n    url: https://nikola-grubor.github.io\n    # affiliation: Univerzutet u Beogradu, Medicinski fakultet\n    # affiliation-url: https://www.mfub.bg.ac.rs/\ncsl: apa.csl\nbibliography: biblio.bib\ncategories: [baze podataka, statistika, medicina, srpski]\nimage: \"messy-cover.jpg\"\nmermaid: \n  theme: forest\ndraft: false\nengine: knitr\n---\n\n::: {.cell}\n<style type=\"text/css\">\n\np {\n  text-align: justify\n}\n</style>\n:::\n\n\n# Šta su uredni podaci {.justify}\n\n> Svi uredni podaci su slični, ali svi neuredni podaci su neuredni na svoj način. --- Hadley Wickham\n\nUredni podaci su oni podaci koji se mogu analizirati u statističkom softveru bez dodatne obrade. Postoji bezbroj načina da se napravi neuredna baza podataka. Samim tim, sređivanje baze je poduhvat jedinstven za svaku bazu. Neki principi sređivanja se mogu reciklirati, ali uglavnom postoji beskonačan broj načina na koje istraživač može da uneredi svoju bazu podataka čineći je *neupotrebljivom*. Ovaj članak će preći najbitnije savete za pravljenje urednih baza, sa ciljem da bude funkcionalan podsetnik odgovornim istraživačima. Dobar pregled teorije vezane sa uredne podatke se može pronaći u [@wickham2014].\n\nPravljene urednih tabela podataka podrazumeva obimniji posao na početku rada, ali se on višestruko isplati tokom analize podataka. U suprotnom, većina vremena se potroši na sređivanje podataka, a jako malo na konkretnoj nauci. Kvalitet istraživanja opada ako se nedovoljno vremena posveti analizi.\n\nPrvi deo članka posvećen je **gruboj organizaciji podataka** u uredne tabele (@sec-grube_forme), sa savetima za pravljenje tabela namenjenim različitim funkcijama (npr. praćenje pacijenata). Drugi deo članka posvećen je samom **unosu podataka** (@sec-belezenje_podataka), tj. pravilnom imenovanju varijabli, pisanju datuma, kodiranju kategorija i slično. Delovi su nezavisni jedan od drugog ali imaju neke zajedničke koncepte.\n\n# Grube forme baza {#sec-grube_forme}\n\nIsti podaci se mogu zapisati na više načina (@tbl-primer1, @tbl-primer2). Najbolji način organizovanja podataka je onaj gde se svi podaci nalaze na jednom mestu (@fig-tidydata). Kako bi svi podaci bili sadržani u jednoj tabeli oni moraju biti upisani po principu:\n\n-   jedna kolona, jedna varijabla;\n-   jedan red, jedna opservacija;\n-   jedna ćelija, jedan podatak.\n\n![Uredna organizacija podataka. Svaka kolona ima svoju varijablu. Svaki red opservaciju, a svaka ćelija po jednu vrednost [@grolemunda].](tidy-1.png){#fig-tidydata}\n\n| pacijent | starost | merenje | merenje_02 |\n|----------|---------|---------|------------|\n| 001      | 45      | 3.6     | 34         |\n| 002      | 67      | 2.5     | 48         |\n| 003      | 82      | 1.8     | 55         |\n\n: Varijanta tabele gde su varijable `merenje` i `merenje_02` unešene zasebno. {#tbl-primer1}\n\n| pacijent | starost | tip_merenja | vrednost_merenja |\n|----------|---------|-------------|------------------|\n| 001      | 45      | merenje     | 3.6              |\n| 001      | 45      | merenje_02  | 34               |\n| 002      | 82      | merenje     | 1.8              |\n| ...      | ...     | ...         | ...              |\n\n: Varijanta tabele, sa istim podacima, gde su različita merenja organizovana unutar varijable `tip_merenja`. Primetiti da se varijabla `pacijent` ponavlja i povezuje sva merenja sa odgovarajućim pacijentom. {#tbl-primer2}\n\n## Pravougaona forma\n\nČuvanjem podataka na ovaj način dobijamo pravougaonik forme $red \\times kolona$ gde svaka ćelija mora imati neku vrednost, čak i ako ona nedostaje (videti @sec-missing-data). Jako je bitno da svaka ćelija sadrži tačno jednu informaciju (@sec-granular). Ukoliko se ovo ne ispoštuje, neminovno će doći do greške pri unosu podataka.\n\n![Ovu katastrofu treba izbegavati. Barem su tabele unutar radne sveske pravougaone [@christiebahlai].](messy-01.jpg)\n\n## Ponovljena merenja\n\nU zavisnosti od kompleksnosti ponovljenih merenja, tj. koliko podataka se prikuplja, treba razmotriti dve mogućnosti: široke/dugačke tabele ili relacione tabele. Široke tabele su korisne kada nemamo puno ponovljenih merenja ili varijabli. Tada je lako dodati još kolona za svako ponovljeno merenje. Međutim, kada imamo mnogo podataka, radi čitljivosti i fleksibilnosti, trebalo bi koristiti relacione tabele.\n\n### Široke i dugačke tabele\n\nŠiroke tabele imaju prednost lakšeg popunjavanje (@tbl-wide). Podaci se upisuju kako čitamo i pišemo, sa leva na desno. Alternativa širokim tabelama su dugačke tabele (@tbl-tall). Upisivanje je napornije, ali su tabele preglednije.\n\n| id  | merenje_dan_01 | merenje_dan_02 | merenje_dan_03 | merenje_dan_04 |\n|-----|----------------|----------------|----------------|----------------|\n| 001 | 3.4            | 2.4            | 5.4            | 3.2            |\n| 002 | 1.5            | 2.3            | 2.3            | 1.4            |\n| ... | ...            | ...            | ...            | ...            |\n\n: Široka tabela gde se ponovljena merenja upisuju kao dodatne kolone. {#tbl-wide}\n\n| id  | dan | merenje |\n|-----|-----|---------|\n| 001 | 1   | 3.4     |\n| 001 | 2   | 2.4     |\n| 001 | 3   | 5.4     |\n| 001 | 4   | 3.2     |\n| ... | ... | ...     |\n\n: Dugačka tabela ima drastično manji broj kolona, ali ima ponovljene unose jedinstvenog indikatora `id`, koji povezuje merenja sa pacijentom (videti @sec-id). {#tbl-tall}\n\n### Relacione tabele\n\nRelacione tabele su pogodne za belezenje velikog broja laboratorijskih analiza, pogotovo ponovljenih merenja. Ostavljaju osnovnu tabelu (koja sadrži opšte informacije koje se neće menjati) čitkom i smanjuju širinu baze, što je čini preglednijom. Laboratorijska merenja pacijenata su povezana sa osnovnim informacijama preko kolone `id` koja je **jedinstveno** (@sec-id) dodeljena svakom pacijentu u momentu kada je on upisan u bazu [@mph2013].\n\n::: columns\n::: {.column width=\"45%\"}\n| id  | starost | dijagnoza    |\n|-----|---------|--------------|\n| 001 | 45      | dijagnoza_01 |\n| 002 | 65      | dijagnoza_02 |\n| 003 | 87      | dijagnoza_01 |\n\n: Osnovna tabela sa informacijama pacijenta.\n:::\n\n::: {.column width=\"10%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"45%\"}\n| id  | lab_01 | lab_02 |\n|-----|--------|--------|\n| 001 | 2.5    | 1.2    |\n| 002 | 2.3    | 5.6    |\n| 003 | 1.2    | 1.7    |\n\n: Relaciona tabela sa laboratorijskim analizama.\n:::\n:::\n\nKoncept relacionih tabela je lako proširiti po potrebi. Kombinacija dve tabele povezane preko `id`, gde $\\text{tabela sa merenjima}$ sadrži `lab_id` (jedinstvenu identifikaciju laboratorijskog merenja) i `datum`, te se može koristiti za praćenje laboratorijskih parametara pacijenata tokom vremena.\n\n\n```{mermaid}\n%%| label: fig-relation\n%%| fig-align: center\n%%| fig-cap: \"Relacioni odnosi između tabela.\"\nflowchart LR\n  A[\"Osnovna tabela\"] --> B[\"Tabela sa merenjima\"]\n  B --> C(lab_id) & D(datum)\n```\n\n\n::: columns\n::: {.column width=\"45%\"}\n| id  | starost | dijagnoza    |\n|-----|---------|--------------|\n| 001 | 45      | dijagnoza_01 |\n| 002 | 65      | dijagnoza_02 |\n| 003 | 87      | dijagnoza_01 |\n| ... | ...     | ...          |\n\n: Varijabla `id` povezuje osnovne informacije sa laboratorijskim merenjima.\n:::\n\n::: {.column width=\"10%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"45%\"}\n| id  | lab_id | lab_datum  | rezultat |\n|-----|--------|------------|----------|\n| 001 | 001    | 2023-11-01 | 1.2      |\n| 001 | 002    | 2023-12-15 | 5.6      |\n| 002 | 001    | 2022-12-01 | 1.7      |\n| ... | ...    | ...        | ...      |\n\n: Relaciona tabela sa vremenskom serijom laboratorijskih analiza.\n:::\n:::\n\nPrednosti relacionih tabela su mnogostruke. Ukoliko je potrebno izmeniti neki osnovni podatak o pacijentu, dovoljno je ažurirati osnovnu tabelu. Izbegava se ponovljeno upisivanje istih podataka i time se smanjuje verovatnoća greške.\n\n::: callout-note\nRelacione tabele je lako napraviti u *Excel*-u. Unutar jedne Excel radne sveske (eng. workbook) napraviti više odvojenih listova (eng. sheet) sa tabelama. **Ne treba** praviti više tabela jedne pored drugih!\n:::\n\n# Beleženje podataka {#sec-belezenje_podataka}\n\nNajvažnije je biti dosledan. Uvek koristiti iste termine za dijagnoze i paziti na slovne greške. Jako je bitno odrediti klasifikacije koje će biti u upotrebi na vreme, kako ne bi došlo do nesuglasica.\n\n::: callout-important\n## Legenda\n\nJako je korisno napraviti legendu varijabli. Legenda podrazumeva pismeno objašnjenje značenja imena varijabli. Legendu treba napraviti na posebnom listu u Excel-u. Pravljenje legende je korisno jer forsira istraživača da razmisli o značenjima varijabli, i klasifikacijama koje će koristiti (videti @sec-cat).\n:::\n\n![Primer legende [@broman2018].](legend.jpg)\n\n## Opšta imena varijabli i podataka {#sec-naming}\n\nImena varijabli trebaju da budu kratka i jasna. Primeri dobrih naziva su dati u @tbl-imena. Pored imena kolona, potrebno je dobro upisati i vrednosti u redove. Merne jedicine (`75 (kg)`) ne unositi u polja sa vrednostima, već ih izmestiti u imena varijable (`tezina_kg`); još je bolje ako se merne jedinice upišu u legendu (@sec-belezenje_podataka), a imena varijabli ostanu jednostavna.\n\n| Dobro         | Alternativa  | Izbegavati               |\n|---------------|--------------|--------------------------|\n| tezina_kg     | tezina       | telesna težina (kg)      |\n| pol           | pol          | M/F                      |\n| glukoza_01    | prvo_glukoza | 1\\. merenje glc          |\n| postop_dan_03 | POD_03       | treći postoperativni dan |\n| visina_cm     | visina       | tv                       |\n\n: Perimeri dobrih i loših imena varijabli. {#tbl-imena}\n\n## Datumi\n\nDatumi i vreme su veoma problematični za unošenje (najviše zato što *Excel* tumači sve i svašta kao datum). Svetski standard pisanja datuma je forme YYYY-MM-DD (npr. 2023-12-05). *Excel* je notoran po tome da menja kolone sam, tražeći kao odgovarajući tip podatka koji je upisan. To govoto nikad nije dobra stvar, i treba obavezno proveriti unete podatke ako ih *Excel* promeni.[^1]\n\n[^1]: Excel je uneo neverovatnu pometnju u polje genomike, jer uporno tumači imena gena kao datume. Ove greške se uporno provlače jer Excel svoje izmene ne prijavljuje već ih radi \"tiho\" u pozadini, ne dajući obaveštenje korisniku [@lewis2021].\n\n![Loše formatirani datumi (https://xkcd.com/1179/).](https://imgs.xkcd.com/comics/iso_8601.png)\n\n## Podaci koji nedostaju {#sec-missing-data}\n\nPostoji velika razlika između toga da li smo načinili merenje i dobili nulu kao vrednost ($\\text{merenje} = 0$) ili nismo uopšte imali opservaciju ($\\text{merenje} = \\; ?$). U prvom slučaju je jasno da laboratorijska vrednost opservirana (tj. viđena) ali je rezultat bio $0$. U drugom slučaju merenje nikad nije napravljeno pa ne možemo da znamo da li je vrednost $0$ ili bilo koja druga (@fig-missing-data). Zbog toga se upisivanje ovih podataka razlikuje.\n\nNajbolje je upisati $\\text{NA}$ (eng. *not applicable/not available*) u polje čija se vrednost ne zna. Moderni statistički programi prepoznaju ovaj unos kao poseban tip podatka različit od $0$.\n\n![Prikazane u dve tabele kojima nedostaju podaci. U tabeli A nije potpuno jasno koji datumi idu uz prisutna merenja glukoze. U tabeli B nije jasno kojoj vrsti kulture pripadaju ćelije [@broman2018].](missing.jpg){#fig-missing-data}\n\n::: callout-warning\nZa upisivanje podataka se najčešće koristi *Microsoft Excel*. Neki autori daju preporuke da se nepoznata polja ostave prazna. Ovo može biti opasno jer se dešava da istraživač tokom upisa slučajno previdi prazno polje i pokvari redosled upisa podataka. Ako se odlučite za prazna polja, budite pažljivi!\n:::\n\n## Jedinstvena identifikacija opservacija {#sec-id}\n\nSvaka opservacija se mora jedinstveno obeležiti kako bi se sve vrednostu u tabeli povezale sa njom. U kliničkoj praksi je najbolje upotrebiti jedinstveni matični broj građanina. Međutim kako je ovo poverljiv podatak, neki istraživači se opredeljuju za broj istorije. Nažalost broj istorije pacijenta nije jedinstven, i mogu se naći različiti pacijenti sa istim brojem, pogotovo ako se podaci prikupljaju sa više izvora.\n\nRešenje je napraviti jedinstvenu kolonu, najčešće pod nazivom `id`, koja će služiti za identifikaciju opservacija. To mogu biti pacijent, merenje, medicinski aparat, ili drugo. `id` kolonu dodeljuje istaživač po svom nahođenju, jedini uslov je da svaka zasebna opservacija ima jedinstven način identifikacije. Svaki put kada se unose novu podaci u bazu treba napisati odgovarajući `id` kako bi se znalo na šta se odnose merenja.\n\n::: callout-important\n## Anonimizacija podataka\n\nPodaci se mogu lako anonimizovati funkcijama tako da se uklone sve osetljive informacije. Kada već postoji `id` dodeljen od strane instraživača, dovoljno je samo anonimizovati identifikujuće informacije koje stoje uz `id`. Najpraktičnije, nekom kriptografskom funkcijom ukoliko je potrevno deanonimizovati te podatke u budućnosti, ili prostim brisanjem ako nije.\n:::\n\n## Kategorije i klasifikacije {#sec-cat}\n\nProblem sa kategorijama je nedostatak sistematičnosti. Istraživači se susreću sa opservacijama koje u svojoj punoj veličini odbijaju da se klasifikuju. Na primer, specifična operativna tehnika koja podrazumeva odstranjivanje 3 segmenta jetre je različita od one koja odstranjuje samo 2 segmenta. Obe se mogu podvesti pod kategoriju: *segmentektomija jetre*, ali se gube detalji. Svaka gruba klasifikacija podrazumeva neki gubitak informacija. Koja vrsta klasifikacije će se koristiti zavisi od istraživačkog pitanja. Ako ne istražujemo specifične efekte segmentektomija jetre verovatno nećemo izgubiti mnogo ako koristimo grubu klasifikaciju. Samo je važno biti sistematičan i dosledan u svom zapisivanju podataka.\n\n::: callout-important\nKategorije se ne moraju beležiti brojevima kao indikatorima (0 i 1). Moderni statistički programi prepoznaju kategorije kao reči. Bitno je samo obratiti pažnju na slovne greške. Jer `dijabetes tip 1` je potpuno druga kategorija od `dijabtes tip 1`.\n:::\n\n## Granularni podaci {#sec-granular}\n\nGranularni podaci podrazumevaju zapisivanje podataka detaljne, precizne i najfinije rezolucije. To znači da je uvek bolje zabeležiti nečiju telesnu visinu i težinu pre nego samo upisati *gojazan*. Grupisani podaci su isto neuredni. Ako imamo podatak o sistolnom i dijastolnom pritisku `120/80 mmHg`, potrebno je razdvojiti ove vrednosti u pojedinačne kolone i ukloniti mernu jedinicu iz polja (@fig-granular).\n\n\n```{mermaid}\n%%| label: fig-granular\n%%| fig-align: center\n%%| fig-cap: \"Razdvajanje grupisanih podataka u granularnu formu.\"\n\nflowchart TD\n  A[\"120/80 mmHg\"] --> B[120] & C[80]\n```\n\n\n$$\n\\text{gojaznost} \\xrightarrow{preciznije} \\text{BMI} \\xrightarrow{preciznije} \\text{Visina, Težina}\n$$\n\n::: callout-important\nUvek se iz granularnih podataka mogu izvesti zbirovi, odnosi ili grublje kategorije, ali se nikad ne može ići u suprotnom smeru --- gubitak informacija je trajan.\n:::\n\n$$\n180 \\; mmHg \\xrightarrow{\\text{manje granularno}} \\text{hipertenzivan}\n$$\n\n$$\n180 \\; mmHg \\not\\leftarrow \\text{hipertenzivan}\n$$\n\nNe treba računati u tabelama. To je deo obrade podataka. Telesna visina i telesna težina su podaci. Njihovom kombinacijom se moze izračunati BMI (body mass index) pacijenta, što je izvedena mera. Nema potrebe trošiti vreme na mere izvedene iz podataka.\n\n## Beleške\n\nTreba izbegavati čuvanje informacija formatiranjem (bojenje ćelija, podvlačenje, zadebljavanje teksta, itd.), takve promene su nevidljive statističkom softveru --- ako je nešto bitna informacija onda mora da bude zapisano kao podatak. Ukoliko je potrebno imati beleške, najbolje je napraviti posebnu varijablu `beleske`.\n\n# Zaključak\n\nPravilan unos podataka i uredne baze ostavljaju prostora za kvalitetne analize i konkretna naučna pitanja. Polje dizajna baza podataka je veliko, ali za potrebe istraživača ove smernice su sasvim dovoljne. Ne zaboravite da konsultujete svog univerzitetskog statističara pre prikupljanja podataka!\n\n::: callout-important\n## Rezime\n\n-   Doslednost\n-   Upisivati granularne podatke kad god je moguće\n-   Ako je nešto bitna informacija, onda je upisati kao podatak\n-   Pisati datume u formi YYYY-MM-DD (2023-11-05)\n-   Bez praznih polja, koristiti $\\text{NA}$ za podatke koji nedostaju\n-   Bez mernih jedinica u poljima\n-   Napraviti legendu\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}